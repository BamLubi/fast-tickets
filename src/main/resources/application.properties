# 应用名称
spring.application.name=fast_tickets
# 应用服务 WEB 访问端口
#server.port=8888
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=com.bytedance.fast_tickets.mybatis.entity
# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=defaultDataSource
# 数据库连接地址
spring.datasource.url=jdbc:mysql://192.168.45.128:3306/fast_tickets?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=root
spring.datasource.password=ustc123123
#指定redis信息 (如 host, ip, password)
spring.redis.host=192.168.45.128
spring.redis.port=6379
# nameservice服务器地址
rocketmq.name-server=192.168.45.128:9876
# 组名
rocketmq.producer.group=fast_tickets

## access log目录
#server.undertow.accesslog.dir=
## 是否打开access log
#server.undertow.accesslog.enabled=false
## access log的输出格式化模板
#server.undertow.accesslog.pattern=common
## 日志文件名称前缀
#server.undertow.accesslog.prefix=access_log.
## 是否开启access log rotation
#server.undertow.accesslog.rotate=true
## 日志文件名称后缀
#server.undertow.accesslog.suffix=log
## 每个buffer可以存储的字节数,buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理，设置越小越好，根据实际业务尽量设置的小一点
#server.undertow.buffer-size=1024
## 是否直接分配堆外内存
#server.undertow.direct-buffers=true
## 置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程，设置太大会使项目启动失败
#server.undertow.threads.io=6
## http发送的请求内容的最大字节数
#server.undertow.max-http-post-size=0
## 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程，它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
#server.undertow.threads.worker=256
